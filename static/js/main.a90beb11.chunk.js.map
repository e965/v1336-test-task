{"version":3,"sources":["reducers/index.js","store.js","components/inc/Icon.js","components/Header.js","components/inc/Select.js","data.js","components/MainData.js","components/MainTime.js","components/MainList.js","components/MainCanvas.js","components/Main.js","App.js","index.js"],"names":["initialState","appID","plants","well","combineReducers","reducer","state","action","type","payload","lastAction","Store","createStore","rootReducer","Icon","props","className","name","style","pointerEvents","aria-hidden","Header","iconName","this","createButton","React","Component","Select","id","styles","value","onChange","changeEvent","disabled","children","rnd","max","Math","floor","random","wellNum","prepareData","data","startTime","hours","forEach","plant","title","num","brigades","i","brigadesNum","push","brigade","field","fields","length","wells","times","startDate","Date","now","setHours","endTime","getTime","DataBlock","cluster","subscribe","getState","setState","event","preventDefault","onSubmit","handleSubmit","data-flex","htmlFor","labelText","readOnly","flex","MainData","channel","handleChange","bind","target","JSON","parse","stringify","Data","Object","keys","key","date","toLocaleDateString","year","month","day","hour","minute","window","open","document","body","innerHTML","hidden","onClick","openData","TimeForm","time_1","localStorage","getItem","time_2","Number","time_3","selectors_disabled","dispatch","filterPlants","period","startDay","filter","setItem","changes","marginTop","WrappedTimeForm","connect","MainTime","MainList","prevState","split","choiceWell","PlantsList","brigadesList","j","wellsList","k","wellData","wellLI","handleWellChoice","brigadeLI","plantLI","WrappedMainList","MainCanvas","cittenImg","src","alt","Main","App","store","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a90beb11.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\r\n\r\nconst initialState = {\r\n  appID: 'e965:reactapp',\r\n  plants: [],\r\n  well: {}\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FILTER_PLANTS':\r\n      return { ...state, plants: action.payload }\r\n\r\n    case 'SELECT_WELL':\r\n      return { ...state, well: action.payload }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// https://github.com/reduxjs/redux/issues/580#issuecomment-133188511\r\nconst lastAction = (state = null, action) => action\r\n\r\nexport default combineReducers({\r\n  reducer, lastAction\r\n})\r\n","import { createStore } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nconst Store = createStore(rootReducer)\r\n\r\nexport default Store\r\n","import React from 'react'\r\n\r\nconst Icon = props => (\r\n  <i className={`fa fa-${ props.name }`} style={{ pointerEvents: 'none' }} aria-hidden=\"true\" />\r\n)\r\n\r\nexport default Icon\r\n","import React from 'react'\r\n\r\nimport Icon from './inc/Icon'\r\n\r\nclass Header extends React.Component {\r\n  createButton(iconName) {\r\n    return (\r\n      <button>\r\n        <Icon name={iconName} />\r\n      </button>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <ul className=\"header--left\">\r\n          <li>\r\n            { this.createButton('bars') }\r\n          </li>\r\n        </ul>\r\n        <ul className=\"header--right\">\r\n          <li>\r\n            { this.createButton('phone') }\r\n          </li>\r\n          <li>\r\n            { this.createButton('info') }\r\n          </li>\r\n        </ul>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nimport Icon from './Icon'\r\n\r\nconst Select = props => (\r\n  <div className=\"select-wrapper\">\r\n    <select id={ props.id } style={ props.styles } value={ props.value } onChange={ props.changeEvent } disabled={ props.disabled }>\r\n      { props.children }\r\n    </select>\r\n    <Icon name=\"chevron-down\" />\r\n  </div>\r\n)\r\n\r\nexport default Select\r\n","// генерация случайных данных для использования в приложении\r\n// (теоретически, можно представить, что их отдала API)\r\n\r\nconst PLANTS = [\r\n  {\r\n    num: 1,\r\n    fields: [\r\n      'Павловское', 'Чикулаевское', 'Чернушинское', 'Трушниковское', 'Этышское', 'Дороховское'\r\n    ],\r\n    brigadesNum: 20\r\n  }, {\r\n    num: 2,\r\n    fields: [\r\n      'Красноярско-Куединское', 'Гондыревское', 'Степеновское', 'Аксаитовское'\r\n    ],\r\n    brigadesNum: 12\r\n  }, {\r\n    num: 3,\r\n    title: 'Цех №3',\r\n    fields: [\r\n      'Шагирто-Гожанское', 'Аптугайское', 'Шагирское', 'Кудрявцевское', 'Быркинское', 'Альняшское'\r\n    ],\r\n    brigadesNum: 16\r\n  }\r\n]\r\n\r\nlet rnd = max => Math.floor(Math.random() * max)\r\n\r\nlet wellNum = 0\r\n\r\nlet getWellNum = () => {\r\n  return wellNum += 1 + rnd(10)\r\n}\r\n\r\nlet prepareData = data => {\r\n  let startTime = [0, 6, 12, 18]\r\n  let hours = [8, 12]\r\n\r\n  data.forEach(plant => {\r\n    plant.title = `Цех №${plant.num}`\r\n\r\n    plant.brigades = []\r\n    for (let i = 0; i <= plant.brigadesNum; i++) {\r\n      plant.brigades.push({})\r\n    }\r\n    delete plant.brigadesNum\r\n\r\n    plant.brigades.forEach((brigade, i) => {\r\n      brigade.title = `Бригада ${plant.num < 10 ? `0${plant.num}` : plant.num}${i < 10 ? `0${i}` : i}`\r\n\r\n      brigade.field = plant.fields[rnd(plant.fields.length)]\r\n\r\n      brigade.wells = []\r\n      for (let i = 0; i <= 10; i++) {\r\n        brigade.wells.push(getWellNum())\r\n      }\r\n\r\n      brigade.times = {}\r\n      brigade.times.startDate = new Date(Date.now() - rnd(12) * 24 * 60 * 60 * 1000).setHours(0, 0, 0, 0)\r\n      brigade.times.startTime = new Date(brigade.times.startDate).setHours(startTime[rnd(startTime.length)], 0, 0, 0)\r\n      brigade.times.endTime = new Date(brigade.times.startTime + hours[rnd(hours.length)] * 60 * 60 * 1000).getTime()\r\n    })\r\n\r\n    delete plant.num\r\n    delete plant.fields\r\n  })\r\n\r\n  return data\r\n}\r\n\r\nexport default prepareData(PLANTS)\r\n","import React from 'react'\r\n\r\nimport Icon from './inc/Icon'\r\nimport Select from './inc/Select'\r\n\r\nimport Store from '../store'\r\nimport Data from '../data'\r\n\r\nclass DataBlock extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      num: '',\r\n      cluster: '',\r\n      brigade: '',\r\n      field: ''\r\n    }\r\n\r\n    Store.subscribe(() => {\r\n      if (Store.getState().lastAction.type === 'SELECT_WELL') {\r\n        this.setState({ ...Store.getState().reducer.well })\r\n      }\r\n    })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form id={ this.props.id } onSubmit={ this.handleSubmit }>\r\n        <div className=\"inputs input-group\" data-flex>\r\n          <label htmlFor={ this.props.id + '_ti' }>{ this.props.labelText }</label>\r\n          <input id={ this.props.id + '_ti' } type=\"text\" value={ this.state[this.props.value] } readOnly />\r\n        </div>\r\n        <div className={ 'inputs ' + (this.props.children.length > 0 ? 'input-group' : 'input-one') } data-flex={ this.props.flex }>\r\n          { this.props.children }\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nclass MainData extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      channel: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ channel : event.target.value })\r\n  }\r\n\r\n  openData() {\r\n    let data = JSON.parse(JSON.stringify(Data))\r\n\r\n    let formatDate = date => {\r\n      return new Date(date).toLocaleDateString(\r\n        [], { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' }\r\n      )\r\n    }\r\n\r\n    data.forEach(plant => {\r\n      plant.brigades.forEach(brigade => {\r\n        let timesKeys = Object.keys(brigade.times)\r\n        timesKeys.forEach(key => {\r\n          brigade.times[key] = formatDate(brigade.times[key])\r\n        })\r\n      })\r\n    })\r\n\r\n    window.open('about:blank').document.body.innerHTML = `<pre>${ JSON.stringify(data, null, '  ') }</pre>`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main__data\">\r\n        <DataBlock id=\"data_brigade\" labelText=\"Бригада\" value=\"brigade\">\r\n          <Select id=\"data_brigade_sel\" value={ this.state.channel } changeEvent={ this.handleChange }>\r\n            <option disabled hidden value=''>Каналы</option>\r\n            <option>Россия 24</option>\r\n            <option>2х2</option>\r\n            <option>СТС</option>\r\n            <option>Первый канал</option>\r\n            <option>PewDiePie</option>\r\n            <option>Беломорско-Балтийский</option>\r\n            <option>#aniperm</option>\r\n          </Select>\r\n        </DataBlock>\r\n\r\n        <DataBlock id=\"data_field\" labelText=\"Месторождение\" value=\"field\">\r\n          <button>\r\n            <Icon name=\"area-chart\" />\r\n            <span>Построить</span>\r\n          </button>\r\n        </DataBlock>\r\n\r\n        <DataBlock id=\"data_cluster\" labelText=\"Куст\" value=\"cluster\" flex>\r\n          <input className=\"fa fa-bar-chart\" type=\"checkbox\" />\r\n          <input className=\"fa fa-hashtag\" type=\"checkbox\" />\r\n          <input className=\"fa fa-key-modern\" type=\"checkbox\" />\r\n          <input className=\"fa fa-download\" type=\"checkbox\" />\r\n          <input className=\"fa fa-anchor\" type=\"checkbox\" />\r\n        </DataBlock>\r\n\r\n        <DataBlock id=\"data_well\" labelText=\"Скважина\" value=\"num\" flex>\r\n          <button onClick={() => { this.openData() }}><Icon name=\"print\" /></button>\r\n          <button><Icon name=\"cogs\" /></button>\r\n          <button><Icon name=\"file-text\" /></button>\r\n        </DataBlock>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainData\r\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport Data from '../data'\r\n\r\nimport Icon from './inc/Icon'\r\nimport Select from './inc/Select'\r\n\r\nclass TimeForm extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.appID = this.props.appID\r\n\r\n    this.state = {\r\n      time_1: localStorage.getItem(`${this.appID}:time_1`)\r\n        ? localStorage.getItem(`${this.appID}:time_1`)\r\n        : 'today',\r\n\r\n      time_2: localStorage.getItem(`${this.appID}:time_2`)\r\n        ? Number(localStorage.getItem(`${this.appID}:time_2`))\r\n        : 0,\r\n\r\n      time_3: localStorage.getItem(`${this.appID}:time_3`)\r\n        ? Number(localStorage.getItem(`${this.appID}:time_3`))\r\n        : 24\r\n    }\r\n\r\n    this.state.selectors_disabled = (this.state.time_1 === 'week')\r\n\r\n    this.dispatch = this.props.dispatch\r\n\r\n    this.dispatch(this.filterPlants(this.state))\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n  }\r\n\r\n  filterPlants(data) {\r\n    let plants = JSON.parse(JSON.stringify(Data))\r\n\r\n    let period = {}\r\n\r\n    data.time_2 = Number(data.time_2)\r\n    data.time_3 = Number(data.time_3)\r\n\r\n    switch (data.time_1) {\r\n      case 'today':\r\n      case 'yesterday':\r\n        period.startDay = new Date(\r\n            data.time_1 === 'today' ? Date.now() : Date.now() - 24 * 60 * 60 * 1000\r\n          ).setHours(0, 0, 0, 0)\r\n        period.startTime = new Date(period.startDay).setHours(data.time_2)\r\n        period.endTime = new Date(period.startTime).getTime() + data.time_3 * 60 * 60 * 1000\r\n        break;\r\n\r\n      case 'week':\r\n        period.startTime = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).setHours(0, 0, 0, 0)\r\n        period.endTime = new Date(Date.now() + 24 * 60 * 60 * 1000).setHours(23, 59, 59, 999)\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    plants.forEach(plant => {\r\n      plant.brigades = plant.brigades.filter(brigade => {\r\n        return brigade.times.startTime >= period.startTime &&\r\n          brigade.times.endTime <= period.endTime\r\n      })\r\n    })\r\n\r\n    plants = plants.filter(plant => {\r\n      return plant.brigades.length > 0\r\n    })\r\n\r\n    return {\r\n      type: 'FILTER_PLANTS',\r\n      payload: plants\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    localStorage.setItem(`${this.appID}:${event.target.id}`, event.target.value)\r\n\r\n    let changes = {\r\n      [event.target.id]: event.target.value,\r\n\r\n      selectors_disabled: (event.target.id === 'time_1' && event.target.value === 'week')\r\n    }\r\n\r\n    this.setState({ ...changes }, () => {\r\n      this.dispatch(this.filterPlants(this.state))\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"time_select\" onSubmit={ this.handleSubmit }>\r\n        <div className=\"inputs input-group\" data-flex>\r\n          <label htmlFor=\"time_1\">\r\n            <Icon name=\"clock-o\" />\r\n          </label>\r\n\r\n          <Select id=\"time_1\" value={ this.state.time_1 } changeEvent={ this.handleChange }>\r\n            <option value=\"today\">Сегодня</option>\r\n            <option value=\"yesterday\">Вчера</option>\r\n            <option value=\"week\">Неделя</option>\r\n          </Select>\r\n        </div>\r\n\r\n        <div className=\"inputs input-group\" data-flex>\r\n          <label htmlFor=\"time_2\">\r\n            <Icon name=\"hourglass-half\" />\r\n          </label>\r\n\r\n          <div className=\"inputs input-group--column\">\r\n            <Select id=\"time_2\" value={ this.state.time_2 } changeEvent={ this.handleChange } disabled={ this.state.selectors_disabled }>\r\n              <option value=\"0\">Начало 00:00</option>\r\n              <option value=\"6\">Начало 06:00</option>\r\n              <option value=\"12\">Начало 12:00</option>\r\n              <option value=\"18\">Начало 18:00</option>\r\n            </Select>\r\n\r\n            <Select id=\"time_3\" styles={{ marginTop: '1px' }} value={ this.state.time_3 } changeEvent={ this.handleChange } disabled={ this.state.selectors_disabled }>\r\n              <option value=\"1\">1 час</option>\r\n              <option value=\"6\">6 час</option>\r\n              <option value=\"12\">12 часов</option>\r\n              <option value=\"18\">18 часов</option>\r\n              <option value=\"24\">24 часа</option>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { ...state.reducer }\r\n}\r\n\r\nconst WrappedTimeForm = connect(mapStateToProps)(TimeForm)\r\n\r\nconst MainTime = () => (\r\n  <div className=\"main__time\">\r\n    <WrappedTimeForm />\r\n  </div>\r\n)\r\n\r\nexport default MainTime\r\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport Store from '../store'\r\n\r\nclass MainList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.dispatch = this.props.dispatch\r\n\r\n    this.state = {\r\n      plants: Store.getState().reducer.plants\r\n    }\r\n\r\n    Store.subscribe(() => {\r\n      if (Store.getState().lastAction.type === 'FILTER_PLANTS') {\r\n        this.setState((prevState, props) => ({\r\n          plants: props.plants\r\n        }))\r\n      }\r\n    })\r\n  }\r\n\r\n  choiceWell(data) {\r\n    data.brigade = data.brigade.split(' ')[1]\r\n\r\n    return {\r\n      type: 'SELECT_WELL',\r\n      payload: data\r\n    }\r\n  }\r\n\r\n  handleWellChoice(data) {\r\n    this.dispatch(this.choiceWell(data))\r\n  }\r\n\r\n  render() {\r\n    let PlantsList = []\r\n\r\n    this.state.plants.forEach((plant, i) => {\r\n      let brigadesList = []\r\n\r\n      plant.brigades.forEach((brigade, j) => {\r\n        let wellsList = []\r\n\r\n        brigade.wells.forEach((well, k) => {\r\n          let wellData = {\r\n            num: well,\r\n            cluster: 1,\r\n            brigade: brigade.title,\r\n            field: brigade.field\r\n          }\r\n\r\n          let wellLI =\r\n            <li key={k}>\r\n              <button onClick={() => { this.handleWellChoice(wellData) }}>\r\n                Скв. №{ well }\r\n              </button>\r\n            </li>\r\n\r\n          wellsList.push(wellLI)\r\n        })\r\n\r\n        let brigadeLI =\r\n          <li key={j}>\r\n            <details>\r\n              <summary>{ brigade.title }</summary>\r\n              <ul>\r\n                { wellsList }\r\n              </ul>\r\n            </details>\r\n          </li>\r\n\r\n          brigadesList.push(brigadeLI)\r\n      })\r\n\r\n      let plantLI =\r\n        <li key={i}>\r\n          <details>\r\n            <summary>{ plant.title }</summary>\r\n            <ul>\r\n              { brigadesList }\r\n            </ul>\r\n          </details>\r\n        </li>\r\n\r\n      PlantsList.push(plantLI)\r\n    })\r\n\r\n    return (\r\n      <div className=\"main__list\">\r\n        <ul>\r\n          { PlantsList }\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { ...state.reducer }\r\n}\r\n\r\nconst WrappedMainList = connect(mapStateToProps)(MainList)\r\n\r\nexport default WrappedMainList\r\n","import React from 'react'\r\n\r\nimport Store from '../store'\r\n\r\nclass MainCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      wellNum: null\r\n    }\r\n\r\n    Store.subscribe(() => {\r\n      if (Store.getState().lastAction.type === 'SELECT_WELL') {\r\n        this.setState({\r\n          wellNum: Store.getState().reducer.well.num\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let cittenImg = this.state.wellNum\r\n      ? <img src={`https://cataas.com/cat/says/${this.state.wellNum}?size=50&height=350`} alt=\"citten\" />\r\n      : ''\r\n\r\n    return (\r\n      <div className=\"main__canvas\">\r\n        { cittenImg }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainCanvas\r\n","import React from 'react'\r\n\r\nimport MainData from './MainData'\r\nimport MainTime from './MainTime'\r\nimport MainList from './MainList'\r\nimport MainCanvas from './MainCanvas'\r\n\r\nconst Main = () => (\r\n  <main className=\"main\">\r\n    <MainData />\r\n    <MainTime />\r\n    <MainList />\r\n    <MainCanvas />\r\n  </main>\r\n)\r\n\r\nexport default Main\r\n","import React from 'react'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport Store from './store'\r\n\r\nimport Header from './components/Header'\r\nimport Main from './components/Main'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={ Store }>\r\n      <Header />\r\n      <Main />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport './App.scss'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('app')\r\n)\r\n"],"sourceRoot":""}