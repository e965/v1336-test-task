{"version":3,"sources":["reducers/index.js","store.js","components/inc/Icon.js","components/Header.js","components/inc/Select.js","data.js","components/MainData.js","components/MainTime.js","components/MainList.js","components/MainCanvas.js","components/Main.js","App.js","index.js"],"names":["initialState","appID","plants","well","combineReducers","reducer","state","action","type","payload","lastAction","Store","createStore","rootReducer","Icon","props","className","name","style","pointerEvents","aria-hidden","Header","iconName","this","createButton","React","Component","Select","id","styles","value","onChange","changeEvent","children","rnd","max","Math","floor","random","wellNum","prepareData","data","startTime","hours","forEach","plant","title","num","brigades","i","brigadesNum","push","brigade","field","fields","length","wells","times","startDate","Date","now","setHours","endTime","getTime","DataBlock","cluster","subscribe","getState","setState","event","preventDefault","onSubmit","handleSubmit","data-flex","htmlFor","labelText","readOnly","flex","MainData","channel","handleChange","bind","target","JSON","parse","stringify","Data","Object","keys","key","date","toLocaleDateString","year","month","day","hour","minute","window","open","document","body","innerHTML","disabled","hidden","onClick","openData","TimeForm","time_1","localStorage","getItem","time_2","Number","time_3","dispatch","filterPlants","period","startDay","filter","setItem","marginTop","WrappedTimeForm","connect","MainTime","MainList","prevState","split","choiceWell","PlantsList","brigadesList","j","wellsList","k","wellData","wellLI","handleWellChoice","brigadeLI","plantLI","WrappedMainList","MainCanvas","cittenImg","src","alt","Main","App","store","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b49eabff.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\n\nconst initialState = {\n  appID: 'e965:reactapp',\n  plants: [],\n  well: {}\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FILTER_PLANTS':\n      return { ...state, plants: action.payload }\n\n    case 'SELECT_WELL':\n      return { ...state, well: action.payload }\n\n    default:\n      return state\n  }\n}\n\n// https://github.com/reduxjs/redux/issues/580#issuecomment-133188511\nconst lastAction = (state = null, action) => action\n\nexport default combineReducers({\n  reducer, lastAction\n})\n","import { createStore } from 'redux'\n\nimport rootReducer from './reducers'\n\nconst Store = createStore(rootReducer)\n\nexport default Store\n","import React from 'react'\n\nconst Icon = props => (\n  <i className={`fa fa-${ props.name }`} style={{ pointerEvents: 'none' }} aria-hidden=\"true\" />\n)\n\nexport default Icon\n","import React from 'react'\n\nimport Icon from './inc/Icon'\n\nclass Header extends React.Component {\n  createButton(iconName) {\n    return (\n      <button>\n        <Icon name={iconName} />\n      </button>\n    )\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <ul className=\"header--left\">\n          <li>\n            { this.createButton('bars') }\n          </li>\n        </ul>\n        <ul className=\"header--right\">\n          <li>\n            { this.createButton('phone') }\n          </li>\n          <li>\n            { this.createButton('info') }\n          </li>\n        </ul>\n      </header>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\n\nimport Icon from './Icon'\n\nconst Select = props => (\n  <div className=\"select-wrapper\">\n    <select id={ props.id } style={ props.styles } value={ props.value } onChange={ props.changeEvent }>\n      { props.children }\n    </select>\n    <Icon name=\"chevron-down\" />\n  </div>\n)\n\nexport default Select\n","// генерация случайных данных для использования в приложении\n// (теоретически, можно представить, что их отдала API)\n\nconst PLANTS = [\n  {\n    num: 1,\n    fields: [\n      'Павловское', 'Чикулаевское', 'Чернушинское', 'Трушниковское', 'Этышское', 'Дороховское'\n    ],\n    brigadesNum: 20\n  }, {\n    num: 2,\n    fields: [\n      'Красноярско-Куединское', 'Гондыревское', 'Степеновское', 'Аксаитовское'\n    ],\n    brigadesNum: 12\n  }, {\n    num: 3,\n    title: 'Цех №3',\n    fields: [\n      'Шагирто-Гожанское', 'Аптугайское', 'Шагирское', 'Кудрявцевское', 'Быркинское', 'Альняшское'\n    ],\n    brigadesNum: 16\n  }\n]\n\nlet rnd = max => Math.floor(Math.random() * max)\n\nlet wellNum = 0\n\nlet getWellNum = () => {\n  return wellNum += 1 + rnd(10)\n}\n\nlet prepareData = data => {\n  let startTime = [0, 6, 12, 18]\n  let hours = [8, 12]\n\n  data.forEach(plant => {\n    plant.title = `Цех №${plant.num}`\n\n    plant.brigades = []\n    for (let i = 0; i <= plant.brigadesNum; i++) {\n      plant.brigades.push({})\n    }\n    delete plant.brigadesNum\n\n    plant.brigades.forEach((brigade, i) => {\n      brigade.title = `Бригада ${plant.num < 10 ? `0${plant.num}` : plant.num}${i < 10 ? `0${i}` : i}`\n\n      brigade.field = plant.fields[rnd(plant.fields.length)]\n\n      brigade.wells = []\n      for (let i = 0; i <= 10; i++) {\n        brigade.wells.push(getWellNum())\n      }\n\n      brigade.times = {}\n      brigade.times.startDate = new Date(Date.now() - rnd(12) * 24 * 60 * 60 * 1000).setHours(0, 0, 0, 0)\n      brigade.times.startTime = new Date(brigade.times.startDate).setHours(startTime[rnd(startTime.length)], 0, 0, 0)\n      brigade.times.endTime = new Date(brigade.times.startTime + hours[rnd(hours.length)] * 60 * 60 * 1000).getTime()\n    })\n\n    delete plant.num\n    delete plant.fields\n  })\n\n  return data\n}\n\nexport default prepareData(PLANTS)\n","import React from 'react'\n\nimport Icon from './inc/Icon'\nimport Select from './inc/Select'\n\nimport Store from '../store'\nimport Data from '../data'\n\nclass DataBlock extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      num: '',\n      cluster: '',\n      brigade: '',\n      field: ''\n    }\n\n    Store.subscribe(() => {\n      if (Store.getState().lastAction.type === 'SELECT_WELL') {\n        this.setState({ ...Store.getState().reducer.well })\n      }\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n  }\n\n  render() {\n    return (\n      <form id={ this.props.id } onSubmit={ this.handleSubmit }>\n        <div className=\"inputs input-group\" data-flex>\n          <label htmlFor={ this.props.id + '_ti' }>{ this.props.labelText }</label>\n          <input id={ this.props.id + '_ti' } type=\"text\" value={ this.state[this.props.value] } readOnly />\n        </div>\n        <div className={ 'inputs ' + (this.props.children.length > 0 ? 'input-group' : 'input-one') } data-flex={ this.props.flex }>\n          { this.props.children }\n        </div>\n      </form>\n    )\n  }\n}\n\nclass MainData extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      channel: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event) {\n    this.setState({ channel : event.target.value })\n  }\n\n  openData() {\n    let data = JSON.parse(JSON.stringify(Data))\n\n    let formatDate = date => {\n      return new Date(date).toLocaleDateString(\n        [], { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' }\n      )\n    }\n\n    data.forEach(plant => {\n      plant.brigades.forEach(brigade => {\n        let timesKeys = Object.keys(brigade.times)\n        timesKeys.forEach(key => {\n          brigade.times[key] = formatDate(brigade.times[key])\n        })\n      })\n    })\n\n    window.open('about:blank').document.body.innerHTML = `<pre>${ JSON.stringify(data, null, '  ') }</pre>`\n  }\n\n  render() {\n    return (\n      <div className=\"main__data\">\n        <DataBlock id=\"data_brigade\" labelText=\"Бригада\" value=\"brigade\">\n          <Select id=\"data_brigade_sel\" value={ this.state.channel } changeEvent={ this.handleChange }>\n            <option disabled hidden value=''>Каналы</option>\n            <option>Россия 24</option>\n            <option>2х2</option>\n            <option>СТС</option>\n            <option>Первый канал</option>\n            <option>PewDiePie</option>\n            <option>Беломорско-Балтийский</option>\n            <option>#aniperm</option>\n          </Select>\n        </DataBlock>\n\n        <DataBlock id=\"data_field\" labelText=\"Месторождение\" value=\"field\">\n          <button>\n            <Icon name=\"area-chart\" />\n            <span>Построить</span>\n          </button>\n        </DataBlock>\n\n        <DataBlock id=\"data_cluster\" labelText=\"Куст\" value=\"cluster\" flex>\n          <input className=\"fa fa-bar-chart\" type=\"checkbox\" />\n          <input className=\"fa fa-hashtag\" type=\"checkbox\" />\n          <input className=\"fa fa-key-modern\" type=\"checkbox\" />\n          <input className=\"fa fa-download\" type=\"checkbox\" />\n          <input className=\"fa fa-anchor\" type=\"checkbox\" />\n        </DataBlock>\n\n        <DataBlock id=\"data_well\" labelText=\"Скважина\" value=\"num\" flex>\n          <button onClick={() => { this.openData() }}><Icon name=\"print\" /></button>\n          <button><Icon name=\"cogs\" /></button>\n          <button><Icon name=\"file-text\" /></button>\n        </DataBlock>\n      </div>\n    )\n  }\n}\n\nexport default MainData\n","import React from 'react'\n\nimport { connect } from 'react-redux'\n\nimport Data from '../data'\n\nimport Icon from './inc/Icon'\nimport Select from './inc/Select'\n\nclass TimeForm extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.appID = this.props.appID\n\n    this.state = {\n      time_1: localStorage.getItem(`${this.appID}:time_1`)\n        ? localStorage.getItem(`${this.appID}:time_1`)\n        : 'today',\n\n      time_2: localStorage.getItem(`${this.appID}:time_2`)\n        ? Number(localStorage.getItem(`${this.appID}:time_2`))\n        : 0,\n\n      time_3: localStorage.getItem(`${this.appID}:time_3`)\n        ? Number(localStorage.getItem(`${this.appID}:time_3`))\n        : 24\n    }\n\n    this.dispatch = this.props.dispatch\n\n    this.dispatch(this.filterPlants(this.state))\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n  }\n\n  filterPlants(data) {\n    let plants = JSON.parse(JSON.stringify(Data))\n\n    let period = {}\n\n    data.time_2 = Number(data.time_2)\n    data.time_3 = Number(data.time_3)\n\n    switch (data.time_1) {\n      case 'today':\n      case 'yesterday':\n        period.startDay = new Date(\n            data.time_1 === 'today' ? Date.now() : Date.now() - 24 * 60 * 60 * 1000\n          ).setHours(0, 0, 0, 0)\n        period.startTime = new Date(period.startDay).setHours(data.time_2)\n        period.endTime = new Date(period.startTime).getTime() + data.time_3 * 60 * 60 * 1000\n        break;\n\n      case 'week':\n        period.startTime = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).setHours(0, 0, 0, 0)\n        period.endTime = new Date(Date.now() + 24 * 60 * 60 * 1000).setHours(23, 59, 59, 999)\n        break;\n\n      default:\n        break;\n    }\n\n    plants.forEach(plant => {\n      plant.brigades = plant.brigades.filter(brigade => {\n        return brigade.times.startTime >= period.startTime &&\n          brigade.times.endTime <= period.endTime\n      })\n    })\n\n    plants = plants.filter(plant => {\n      return plant.brigades.length > 0\n    })\n\n    return {\n      type: 'FILTER_PLANTS',\n      payload: plants\n    }\n  }\n\n  handleChange(event) {\n    try {\n      localStorage.setItem(`${this.appID}:${event.target.id}`, event.target.value)\n    } catch {}\n\n    this.setState({ [event.target.id]: event.target.value }, () => {\n      this.dispatch(this.filterPlants(this.state))\n    })\n  }\n\n  render() {\n    return (\n      <form id=\"time_select\" onSubmit={ this.handleSubmit }>\n        <div className=\"inputs input-group\" data-flex>\n          <label htmlFor=\"time_1\">\n            <Icon name=\"clock-o\" />\n          </label>\n\n          <Select id=\"time_1\" value={ this.state.time_1 } changeEvent={ this.handleChange }>\n            <option value=\"today\">Сегодня</option>\n            <option value=\"yesterday\">Вчера</option>\n            <option value=\"week\">Неделя</option>\n          </Select>\n        </div>\n\n        <div className=\"inputs input-group\" data-flex>\n          <label htmlFor=\"time_2\">\n            <Icon name=\"hourglass-half\" />\n          </label>\n\n          <div className=\"inputs input-group--column\">\n            <Select id=\"time_2\" value={ this.state.time_2 } changeEvent={ this.handleChange }>\n              <option value=\"0\">Начало 00:00</option>\n              <option value=\"6\">Начало 06:00</option>\n              <option value=\"12\">Начало 12:00</option>\n              <option value=\"18\">Начало 18:00</option>\n            </Select>\n\n            <Select id=\"time_3\" styles={{ marginTop: '1px' }} value={ this.state.time_3 } changeEvent={ this.handleChange }>\n              <option value=\"1\">1 час</option>\n              <option value=\"6\">6 час</option>\n              <option value=\"12\">12 часов</option>\n              <option value=\"18\">18 часов</option>\n              <option value=\"24\">24 часа</option>\n            </Select>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return { ...state.reducer }\n}\n\nconst WrappedTimeForm = connect(mapStateToProps)(TimeForm)\n\nconst MainTime = () => (\n  <div className=\"main__time\">\n    <WrappedTimeForm />\n  </div>\n)\n\nexport default MainTime\n","import React from 'react'\n\nimport { connect } from 'react-redux'\n\nimport Store from '../store'\n\nclass MainList extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.dispatch = this.props.dispatch\n\n    this.state = {\n      plants: Store.getState().reducer.plants\n    }\n\n    Store.subscribe(() => {\n      if (Store.getState().lastAction.type === 'FILTER_PLANTS') {\n        this.setState((prevState, props) => ({\n          plants: props.plants\n        }))\n      }\n    })\n  }\n\n  choiceWell(data) {\n    data.brigade = data.brigade.split(' ')[1]\n\n    return {\n      type: 'SELECT_WELL',\n      payload: data\n    }\n  }\n\n  handleWellChoice(data) {\n    this.dispatch(this.choiceWell(data))\n  }\n\n  render() {\n    let PlantsList = []\n\n    this.state.plants.forEach((plant, i) => {\n      let brigadesList = []\n\n      plant.brigades.forEach((brigade, j) => {\n        let wellsList = []\n\n        brigade.wells.forEach((well, k) => {\n          let wellData = {\n            num: well,\n            cluster: 1,\n            brigade: brigade.title,\n            field: brigade.field\n          }\n\n          let wellLI =\n            <li key={k}>\n              <button onClick={() => { this.handleWellChoice(wellData) }}>\n                Скв. №{ well }\n              </button>\n            </li>\n\n          wellsList.push(wellLI)\n        })\n\n        let brigadeLI =\n          <li key={j}>\n            <details>\n              <summary>{ brigade.title }</summary>\n              <ul>\n                { wellsList }\n              </ul>\n            </details>\n          </li>\n\n          brigadesList.push(brigadeLI)\n      })\n\n      let plantLI =\n        <li key={i}>\n          <details>\n            <summary>{ plant.title }</summary>\n            <ul>\n              { brigadesList }\n            </ul>\n          </details>\n        </li>\n\n      PlantsList.push(plantLI)\n    })\n\n    return (\n      <div className=\"main__list\">\n        <ul>\n          { PlantsList }\n        </ul>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return { ...state.reducer }\n}\n\nconst WrappedMainList = connect(mapStateToProps)(MainList)\n\nexport default WrappedMainList\n","import React from 'react'\n\nimport Store from '../store'\n\nclass MainCanvas extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      wellNum: null\n    }\n\n    Store.subscribe(() => {\n      if (Store.getState().lastAction.type === 'SELECT_WELL') {\n        this.setState({\n          wellNum: Store.getState().reducer.well.num\n        })\n      }\n    })\n  }\n\n  render() {\n    let cittenImg = this.state.wellNum\n      ? <img src={`https://cataas.com/cat/says/${this.state.wellNum}?size=50&height=350`} alt=\"citten\" />\n      : ''\n\n    return (\n      <div className=\"main__canvas\">\n        { cittenImg }\n      </div>\n    )\n  }\n}\n\nexport default MainCanvas\n","import React from 'react'\n\nimport MainData from './MainData'\nimport MainTime from './MainTime'\nimport MainList from './MainList'\nimport MainCanvas from './MainCanvas'\n\nconst Main = () => (\n  <main className=\"main\">\n    <MainData />\n    <MainTime />\n    <MainList />\n    <MainCanvas />\n  </main>\n)\n\nexport default Main\n","import React from 'react'\n\nimport { Provider } from 'react-redux'\nimport Store from './store'\n\nimport Header from './components/Header'\nimport Main from './components/Main'\n\nconst App = () => {\n  return (\n    <Provider store={ Store }>\n      <Header />\n      <Main />\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './App.scss'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n)\n"],"sourceRoot":""}